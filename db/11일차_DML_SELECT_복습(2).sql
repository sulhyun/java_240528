USE SHOPPINGMALL;
# 모드 제품을 조회하는 쿼리
SELECT *
FROM 
	PRODUCT;
    
# 금액이 1만원 이상인 제품을 조회하는 쿼리
SELECT *
FROM 
	PRODUCT
WHERE PR_PRICE >= 10000;

# 제품명에 시원한이 들어간 제품들을 조회하는 쿼리
SELECT *
FROM 
	PRODUCT
WHERE PR_NAME LIKE CONCAT('%', '시원한', '%');

# 카테고리가 옷인 제품을 조회하는 쿼리
SELECT *
FROM
	PRODUCT
WHERE PR_CA_NUM = 1;

# 금액과 제품명을 이용해서 검색하는 쿼리를 일반화해서 만들어보세요.
SELECT *
FROM
	PRODUCT
WHERE PR_NAME LIKE CONCAT('%', '', '%')
	AND PR_PRICE >= 0;
    
SELECT *
FROM
	PRODUCT
WHERE PR_NAME LIKE CONCAT('%', '', '%')
	AND PR_PRICE >= 0
    AND PR_CA_NUM = 1;
    
# 카테고리별 제품의 평균가격을 조회하는 쿼리
SELECT CA_NAME, FORMAT(IFNULL(AVG(PR_PRICE), 0),0)
FROM
	CATEGORY
LEFT JOIN
	PRODUCT ON CA_NUM = PR_CA_NUM
GROUP BY CA_NUM;

# 카테고리별 제품의 평균 가격이 3만원 이상인 카테고리를 조회
SELECT CA_NAME, FORMAT(IFNULL(AVG(PR_PRICE), 0),0)
FROM
	CATEGORY
LEFT JOIN
	PRODUCT ON CA_NUM = PR_CA_NUM
GROUP BY CA_NUM
HAVING AVG(PR_PRICE) >= 30000;

# 카테고리별 등록된 제품수를 조회
SELECT CA_NAME, COUNT(PR_CA_NUM)
FROM 
	CATEGORY
LEFT JOIN
	PRODUCT ON CA_NUM = PR_CA_NUM
GROUP BY CA_NUM;

# 'abc123'회원이 구매한 제품 정보를 조회
SELECT BU_ME_ID, PRODUCT.*
FROM
	BUY
JOIN
	PRODUCT ON BU_PR_CODE = PR_CODE
WHERE BU_ME_ID = 'abc123'
	AND BU_STATE IN('구매', '구매확정');

# 'abc123'회원이 누적 구매 금액을 조회
SELECT BU_ME_ID, FORMAT(SUM(PR_PRICE * BU_AMOUNT),0)
FROM
	BUY
JOIN
	PRODUCT ON BU_PR_CODE = PR_CODE
WHERE BU_ME_ID = 'abc123'
	AND BU_STATE IN('구매', '구매확정');
    
# 'abc123'회원이 장바구니에 1번(CLO001) 제품 3개를 담았을 때 쿼리
INSERT INTO BASKET(BA_PR_CODE, BA_ME_ID, BA_AMOUNT) VALUES
('CLO001', 'abc123', 3);

# 'abc123'회원이 장부구니에 1번(CLO001) 제품 2개를 담았을 때 쿼리
UPDATE BASKET SET BA_AMOUNT = 2 WHERE BA_ME_ID = 'abc123' AND BA_PR_CODE = 'CLO001';

# 'abc123'회원이 장바구니에 있는 CLO001'제품을 2개 구매했을 때 쿼리
INSERT INTO BUY(BU_PR_CODE, BU_ME_ID, BU_AMOUNT, BU_STATE, BU_DATE) VALUES
('CLO001', 'abc123', 2, '구매', NOW());
DELETE FROM BASKET WHERE BA_ME_ID = 'abc123' AND BA_PR_CODE = 'CLO001';




